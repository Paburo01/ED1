1)

void mostrarVotos(nodoColegio *colegios, int urna){
    bool encontrado=false;
    nodoColegio *recorrer=colegios;
    nodoUrna    *urnasb=recorrer->urnas;
    if(recorrer!=NULL){
        while(recorrer->siguiente!=NULL && !encontrado){
            recorrer=recorrer->sig;
            while(urnasb->idUrna!=urna && urnasb->sig!=NULL){
                urnasb=urnasb->sig;
                if(urnasb==urna){
                    nodoVoto *votosb=urnasb->votos;
                    while(votosb->sig!=NULL){
                        cout<<"id: "<<votosb->idPartido;
                        votosb=votosb->sig;
                        }
                    encontrado=true;
                    }

                    if(urnasb->sig==NULL){
                        cout<<"No se encuentra la urna dada en el colegio :"<<recorrer->idColegio<<endl;
                    }
                }
            if(recorrer->siguiente==NULL){
                cout<<"No se ha encontrado la urna especificada"<<endl;
                }
            }
    }else{
        cout<<"Sin nodos colegios"<<endl;
    }


}


void insertarVoto(nodoColegio *colegios, int colegio,
 int urna, int partido) {
    
    bool encontrado=false;
    while(!encontrado && colegios!=NULL){
           if(colegios->idColegio==colegio){
                nodoUrna urnab=colegios->urnas;
                encontrado =true;
                bool encontrada=false;
            while(!encontrada && urnab!=NULL){
                if(urnab->idUrna=urna){
                    nodoVoto *votonuevo= new nodoVoto;
                    votonuevo->idPartido=partido;
                    votonuevo->sig=NULL;
                    urnab->ultimoVoto->sig=votonuevo;
                    urnab->ultimoVoto=votonuevo;
                    encontrada=true;
                    }else{
                        urnab=urnab->sig;
                        }
                }
           }else{
                colegios=colegios->sig;
            }
        }
}



2)

void cola::encolar(float d){
    TNodo_Cola *nuevo=new TNodo_Cola;
    nuevo->Datos=d;
    if(Inicio==NULL){
        nuevo->Siguiente=nuevo;
        nuevo->Anterior=nuevo;
        Inicio=nuevo;
        }else{
        nuevo->Siguiente=Inicio;
        nuevo->Anterior=Inicio->Anterior;
        Inicio->Anterior->Siguiente=nuevo;
        Inicio->Anterior=nuevo;
    }
    ne++;
}


void cola::desencolar(){
   if(Inicio!=NULL){
    if(ne==1){
        Inicio=NULL;
        ne=0;
    }else{
        TNodo_Cola *dc=Inicio;
        Inicio=Inicio->Siguiente;
        Inicio->Anterior=dc->Anterior;
        Inicio->Anterior->Siguiente=Inicio;
        delete dc;


    }
   }else{
    cout<<"No hay nodos"<<endl;
   }
}




