void Borrartodas (TNodo **punt, float x){
    //puntero auxiliar que apunte a donde apunte punt
    TNodo *puntaux=*punt;
    //creo otro puntero para borrar nodos;
    TNodo *puntaux2;
    //bucle mientras puntaaux sea distinto de nulo
    while(puntaux!=NULL){
         //condicional en caso de que sea el primero nodo ha eliminar
         //se ejecutaria mas de una vez siempre que no entre en el else
         //ya que si una vez el primero no es el nodo ha borrar ya nunca mas
         //lo sera

        if(puntaux->dato==x){
            //en caso que el primer nodo sea uno de los que queramos borrar
            //decimos que el puntero punt apunte a el siguiente
            *punt=*punt->sig;
            //eliminado el primer nodo que apunta puntaaux
            delete puntaux;
            //le decimos que punteroaux apunte a donde apunta punt
            puntaux=*punt;

            }else{
                //realizamos un bucle mientras puntaaux sea distinto de nulo
                //una vez entre en este bucle ya nunca saldra hasta que finalice.
                while(puntaux!=NULL){
                        //condicional preguntando si el siguiente nodo tiene como dato el pasado
                        //como parametro
                    if(puntaux->sig->dato==x){
                            //decimos que el punteroaux2 apunte al siguiente ya que sea el nodo a borrar.
                            puntaux2=puntaux->sig;
                            //decimos que el siguiente del nodo que apunta
                            //puntaaux sea el sigiente nodo que apunta puntaaux2
                            puntaux->sig=puntaux2->sig;
                            //eliminamos el nodo que apunta puntaaux2
                            delete puntaux2;
                            //le decimos que puntaaux ahora apunte al siguiente
                            puntaux=puntaux->sig;
                        }else{
                            //si no entra en el if cambia el puntero puntaaux al siguiente
                            //en busca de nodos con ese valor parado como parametro
                            puntaux=puntaux->sig;
                            }
                    }

                }
            }
};